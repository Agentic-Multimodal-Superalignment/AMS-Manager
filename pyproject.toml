[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "merlin-ams-manager"
version = "1.0.0"
description = "🧙‍♂️ Merlin - Your magical assistant for AI/ML tool management with Open Interpreter & Ollama integration"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "Merlin AMS Manager", email = "your-email@example.com"}
]
keywords = ["ai", "ml", "automation", "ollama", "open-interpreter", "package-manager"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research", 
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
requires-python = ">=3.8"
dependencies = [
    "pyyaml>=6.0",
    "rich>=13.0.0",
    "requests>=2.28.0",
    "click>=8.0.0",
]

[project.optional-dependencies]
full = [
    "open-interpreter>=0.2.0",
]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "mypy>=1.0.0",
]

[project.urls]
Homepage = "https://github.com/your-username/merlin-ams-manager"
Repository = "https://github.com/your-username/merlin-ams-manager"
Issues = "https://github.com/your-username/merlin-ams-manager/issues"
Documentation = "https://github.com/your-username/merlin-ams-manager/tree/main/docs"

[project.scripts]
merlin = "ams_manager.main:main"

[tool.hatch.build.targets.wheel]
packages = ["src/ams_manager"]

[tool.hatch.build.targets.sdist]
include = [
    "/src",
    "/docs", 
    "/examples",
    "/tests",
    "README.md",
    "LICENSE",
    "requirements.txt",
]
exclude = [
    "*.pyc",
    "__pycache__",
    ".git",
    ".vscode",
    ".pytest_cache",
    "test_*.py",
]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["ams_manager"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config", 
    "--cov=ams_manager",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-fail-under=80"
]
